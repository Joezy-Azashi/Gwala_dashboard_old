apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gwala-ingress
  namespace: prod
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "20s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300s"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300s"
    nginx.ingress.kubernetes.io/send-timeout: "300s"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.org/proxy-connect-timeout: "20s"
    nginx.org/proxy-read-timeout: "300s"
    nginx.org/proxy-send-timeout: "300s"
    nginx.org/client-max-body-size: "10m"
    nginx.org/proxy-buffering: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_pass_header Authorization;
      add_header X-Frame-Options SAMEORIGIN;
      add_header X-XSS-Protection "1; mode=block";
      proxy_set_header Authorization $http_authorization;
spec:
  ingressClassName: nginx
  rules:
    - host: "beta.gwala.co"
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: gwaladashboard-svc
                port:
                  number: 80
    - host: "app.gwala.co"
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: gwaladashboard-svc
                port:
                  number: 80
  tls:
    - hosts:
        - "beta.gwala.co"
        - "app.gwala.co"
      secretName: gwala-prod-tls
